---
- name: Run Python scripts with repository from GitHub
  hosts: all
  tasks:
    - name: Install git
      apt:
        name: git
        state: present
      become: yes

    - name: Clone the GitHub repository
      git:
        repo: 'https://github.com/priya135792/gcp-test.git'
        dest: /var/your-repo
        version: 'main'  # or the branch you need
      become: yes

    - name: Install python3-venv
      apt:
        name: python3-venv
        state: present
      become: yes

    - name: Create virtual environment
      command: python3 -m venv /tmp/venv
      become: yes

    - name: Install Google Cloud Monitoring package
      pip:
        name: google-cloud-monitoring
        virtualenv: /tmp/venv
        state: present
      become: yes

    - name: Check if credentials file exists
      stat:
        path: /var/your-repo/plated-planet-427716-u5-0ec76f30aad5.json
      register: credentials_file

    - name: Fail if credentials file not found
      fail:
        msg: "The Google Cloud credentials file was not found at /var/your-repo/gcp-test/plated-planet-427716-u5-0ec76f30aad5.json"
      when: not credentials_file.stat.exists

    - name: Write Google Cloud credentials to file
      copy:
        remote_src: yes
        src: /var/your-repo/plated-planet-427716-u5-0ec76f30aad5.json
        dest: /var/service-account-key.json
        mode: '0600'
      become: yes

    - name: Set GOOGLE_APPLICATION_CREDENTIALS environment variable
      lineinfile:
        path: /etc/environment
        line: 'GOOGLE_APPLICATION_CREDENTIALS=/var/service-account-key.json'
        create: yes
      become: yes

    - name: Run enable.py
      command: /tmp/venv/bin/python /var/your-repo/enable.py
      register: result_script1
      environment:
        GOOGLE_APPLICATION_CREDENTIALS: /var/service-account-key.json

    - name: Debug output of enable.py
      debug:
        msg: "{{ result_script1.stdout }}"

    - name: Debug error output of enable.py
      debug:
        msg: "{{ result_script1.stderr }}"
      when: result_script1.stderr is defined and result_script1.stderr != ""
